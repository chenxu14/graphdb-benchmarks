graph.benchmark.dataset=data/Email-Enron.1000_1000
graph.benchmark.random-nodes-interval=100

# Choose which database you want to run
graph.benchmark.databases=nebula
# graph.benchmark.databases=jhb
# graph.benchmark.databases=neo4j

# Janus options
graph.benchmark.janus.custom-ids=true
graph.benchmark.janus.page-size=100
graph.benchmark.janus.buffer-size=1024
graph.benchmark.janus.ids.block-size=10000
graph.benchmark.janus.batch-loading=false

# nebula options
graph.benchmark.nebula.host=10.133.93.29
graph.benchmark.nebula.port=3699
graph.benchmark.nebula.user=user
graph.benchmark.nebula.password=password
graph.benchmark.nebula.space=nebula-benchmark

# Choose which benchmark you want to run
# graph.benchmark.testcase=MASSIVE_INSERTION
graph.benchmark.testcase=SINGLE_INSERTION
graph.benchmark.testcase=KHOP
graph.benchmark.khop.step=2
graph.benchmark.khop.with-props=true
# graph.benchmark.testcase=FIND_SHORTEST_PATH
graph.benchmark.shortestpath.max-hops=5
# graph.benchmark.testcase=DELETION
# graph.benchmark.testcase=CLUSTERING
graph.benchmark.clustering.randomize=false
graph.benchmark.clustering.actual-communities=data/community1000.dat
graph.benchmark.clustering.cache-percentages=5
graph.benchmark.clustering.cache-percentages=10
graph.benchmark.clustering.cache-percentages=15
graph.benchmark.clustering.cache-percentages=20
graph.benchmark.clustering.cache-percentages=25
graph.benchmark.clustering.cache-percentages=30
